{"ast":null,"code":"import * as e from \"react\";\nimport t, { createContext as n, useContext as a, useState as r, useEffect as s, useCallback as c, useRef as l, forwardRef as o, useImperativeHandle as i, useMemo as d } from \"react\";\nimport { isEqual as u } from \"lodash\";\nimport g from \"graphology\";\nimport { Sigma as m } from \"sigma\";\nconst h = n(null),\n  v = h.Provider;\nfunction f() {\n  const e = a(h);\n  if (null == e) throw new Error(\"No context provided: useSigmaContext() can only be used in a descendant of <SigmaContainer>\");\n  return e;\n}\nfunction p() {\n  return f().sigma;\n}\nfunction E() {\n  const {\n      sigma: e,\n      container: t\n    } = f(),\n    [n, a] = r({});\n  return s(() => {\n    if (!e || !n) return;\n    const a = {};\n    return Object.keys(n).forEach(t => {\n      a[t] = n[t], e.setSetting(t, n[t]);\n    }), () => {\n      e && t && t.offsetWidth > 0 && t.offsetHeight > 0 && Object.keys(a).forEach(t => {\n        e.setSetting(t, a[t]);\n      });\n    };\n  }, [e, n, t]), a;\n}\nconst b = [\"clickNode\", \"rightClickNode\", \"downNode\", \"enterNode\", \"leaveNode\", \"doubleClickNode\", \"wheelNode\", \"clickEdge\", \"rightClickEdge\", \"downEdge\", \"enterEdge\", \"leaveEdge\", \"doubleClickEdge\", \"wheelEdge\", \"clickStage\", \"rightClickStage\", \"downStage\", \"doubleClickStage\", \"wheelStage\", \"kill\"],\n  w = [\"click\", \"rightClick\", \"mouseup\", \"mousedown\", \"mousemove\", \"mousemovebody\", \"doubleClick\", \"wheel\"],\n  C = [\"touchup\", \"touchdown\", \"touchmove\"],\n  O = [\"updated\"];\nfunction _() {\n  const e = p(),\n    t = E(),\n    [n, a] = r({});\n  return s(() => {\n    if (!e || !n) return;\n    const a = n,\n      r = Object.keys(a),\n      s = {},\n      c = {},\n      l = e.getSettings();\n    return r.some(e => [\"clickEdge\", \"rightClickEdge\", \"doubleClickEdge\", \"downEdge\"].includes(e)) && !1 === l.enableEdgeClickEvents && (s.enableEdgeClickEvents = !0, c.enableEdgeClickEvents = !1), r.some(e => [\"enterEdge\", \"leaveEdge\"].includes(e)) && !1 === l.enableEdgeHoverEvents && (s.enableEdgeHoverEvents = !0, c.enableEdgeHoverEvents = !1), r.some(e => [\"wheelEdge\"].includes(e)) && !1 === l.enableEdgeWheelEvents && (s.enableEdgeWheelEvents = !0, c.enableEdgeWheelEvents = !1), Object.keys(s).length > 0 && t(s), r.forEach(t => {\n      const n = a[t];\n      b.find(e => e === t) && e.on(t, n), w.find(e => e === t) && e.getMouseCaptor().on(t, n), C.find(e => e === t) && e.getTouchCaptor().on(t, n), O.find(e => e === t) && e.getCamera().on(t, n);\n    }), () => {\n      Object.keys(c).length > 0 && t(c), e && r.forEach(t => {\n        const n = a[t];\n        b.find(e => e === t) && e.off(t, n), w.find(e => e === t) && e.getMouseCaptor().off(t, n), C.find(e => e === t) && e.getTouchCaptor().off(t, n), O.find(e => e === t) && e.getCamera().off(t, n);\n      });\n    };\n  }, [e, n, t]), a;\n}\nfunction y() {\n  const e = p();\n  return c(function (t) {\n    let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;\n    e && t && (n && e.getGraph().order > 0 && e.getGraph().clear(), e.getGraph().import(t), e.refresh());\n  }, [e]);\n}\nfunction j(e) {\n  const t = p(),\n    n = l();\n  u(n.current, e) || (n.current = e);\n  const a = c(e => {\n      t.getCamera().animatedZoom(Object.assign(Object.assign({}, n.current), e));\n    }, [t, n]),\n    r = c(e => {\n      t.getCamera().animatedUnzoom(Object.assign(Object.assign({}, n.current), e));\n    }, [t, n]),\n    s = c(e => {\n      t.getCamera().animatedReset(Object.assign(Object.assign({}, n.current), e));\n    }, [t, n]),\n    o = c((e, a) => {\n      t.getCamera().animate(e, Object.assign(Object.assign({}, n.current), a));\n    }, [t, n]),\n    i = c((e, a) => {\n      const r = t.getNodeDisplayData(e);\n      r ? t.getCamera().animate(r, Object.assign(Object.assign({}, n.current), a)) : console.log(`Node ${e} not found`);\n    }, [t, n]);\n  return {\n    zoomIn: a,\n    zoomOut: r,\n    reset: s,\n    goto: o,\n    gotoNode: i\n  };\n}\nfunction k() {\n  const {\n      container: e\n    } = f(),\n    [t, n] = r(!1),\n    a = () => n(e => !e);\n  return s(() => (document.addEventListener(\"fullscreenchange\", a), () => document.removeEventListener(\"fullscreenchange\", a)), [a]), {\n    toggle: c(() => {\n      var t;\n      t = e, document.fullscreenElement !== t ? t.requestFullscreen() : document.exitFullscreen && document.exitFullscreen();\n    }, [e]),\n    isFullScreen: t\n  };\n}\nconst x = o((_ref, f) => {\n    let {\n      graph: e,\n      id: n,\n      className: a,\n      style: c,\n      settings: o,\n      children: h\n    } = _ref;\n    const p = l(null),\n      E = l(null),\n      b = {\n        className: `react-sigma ${a || \"\"}`,\n        id: n,\n        style: c\n      },\n      [w, C] = r(null),\n      O = l({});\n    u(O.current, o) || (O.current = o || {}), s(() => {\n      let t = null;\n      if (null !== E.current) {\n        const n = e ? \"function\" == typeof e ? new e() : e : new g();\n        t = new m(n, E.current, Object.assign({\n          allowInvalidContainer: !0\n        }, O.current));\n      }\n      return C(t), () => {\n        t && t.kill(), C(null);\n      };\n    }, [E, e, O]), i(f, () => w, [w]);\n    const _ = d(() => w && p.current ? {\n        sigma: w,\n        container: p.current\n      } : null, [w, p.current]),\n      y = null !== _ ? t.createElement(v, {\n        value: _\n      }, h) : null;\n    return t.createElement(\"div\", Object.assign({}, b, {\n      ref: p\n    }), t.createElement(\"div\", {\n      className: \"sigma-container\",\n      ref: E\n    }), y);\n  }),\n  N = _ref2 => {\n    let {\n      id: e,\n      className: n,\n      style: a,\n      children: r,\n      position: s = \"bottom-left\"\n    } = _ref2;\n    const c = {\n      className: `react-sigma-controls ${n || \"\"} ${s}`,\n      id: e,\n      style: a\n    };\n    return t.createElement(\"div\", Object.assign({}, c), r);\n  };\nvar S;\nfunction z() {\n  return z = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a]);\n    }\n    return e;\n  }, z.apply(this, arguments);\n}\nvar H,\n  M = function (t) {\n    return e.createElement(\"svg\", z({\n      \"aria-hidden\": \"true\",\n      \"data-prefix\": \"fas\",\n      \"data-icon\": \"plus\",\n      className: \"plus-solid_svg__svg-inline--fa plus-solid_svg__fa-plus plus-solid_svg__fa-w-14\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 448 512\",\n      width: \"1em\",\n      height: \"1em\"\n    }, t), S || (S = e.createElement(\"path\", {\n      fill: \"currentColor\",\n      d: \"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"\n    })));\n  };\nfunction $() {\n  return $ = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a]);\n    }\n    return e;\n  }, $.apply(this, arguments);\n}\nvar F,\n  V = function (t) {\n    return e.createElement(\"svg\", $({\n      \"aria-hidden\": \"true\",\n      \"data-prefix\": \"fas\",\n      \"data-icon\": \"minus\",\n      className: \"minus-solid_svg__svg-inline--fa minus-solid_svg__fa-minus minus-solid_svg__fa-w-14\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 448 512\",\n      width: \"1em\",\n      height: \"1em\"\n    }, t), H || (H = e.createElement(\"path\", {\n      fill: \"currentColor\",\n      d: \"M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"\n    })));\n  };\nfunction G() {\n  return G = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a]);\n    }\n    return e;\n  }, G.apply(this, arguments);\n}\nvar P = function (t) {\n  return e.createElement(\"svg\", G({\n    \"aria-hidden\": \"true\",\n    \"data-prefix\": \"far\",\n    \"data-icon\": \"dot-circle\",\n    className: \"dot-circle-regular_svg__svg-inline--fa dot-circle-regular_svg__fa-dot-circle dot-circle-regular_svg__fa-w-16\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 512 512\",\n    width: \"1em\",\n    height: \"1em\"\n  }, t), F || (F = e.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 168c-44.183 0-80 35.817-80 80s35.817 80 80 80 80-35.817 80-80-35.817-80-80-80z\"\n  })));\n};\nconst B = _ref3 => {\n  let {\n    className: e,\n    style: n,\n    animationDuration: a = 200,\n    children: r\n  } = _ref3;\n  const {\n      zoomIn: s,\n      zoomOut: c,\n      reset: l\n    } = j({\n      duration: a,\n      factor: 1.5\n    }),\n    o = {\n      style: n,\n      className: `react-sigma-control ${e || \"\"}`\n    };\n  return t.createElement(t.Fragment, null, t.createElement(\"div\", Object.assign({}, o), t.createElement(\"button\", {\n    onClick: () => s(),\n    title: \"Zoom In\"\n  }, r ? r[0] : t.createElement(M, {\n    style: {\n      width: \"1em\"\n    }\n  }))), t.createElement(\"div\", Object.assign({}, o), t.createElement(\"button\", {\n    onClick: () => c(),\n    title: \"Zoom Out\"\n  }, r ? r[1] : t.createElement(V, {\n    style: {\n      width: \"1em\"\n    }\n  }))), t.createElement(\"div\", Object.assign({}, o), t.createElement(\"button\", {\n    onClick: () => l(),\n    title: \"See whole graph\"\n  }, r ? r[2] : t.createElement(P, {\n    style: {\n      width: \"1em\"\n    }\n  }))));\n};\nvar I;\nfunction L() {\n  return L = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a]);\n    }\n    return e;\n  }, L.apply(this, arguments);\n}\nvar R,\n  W = function (t) {\n    return e.createElement(\"svg\", L({\n      \"aria-hidden\": \"true\",\n      \"data-prefix\": \"fas\",\n      \"data-icon\": \"expand\",\n      className: \"expand-solid_svg__svg-inline--fa expand-solid_svg__fa-expand expand-solid_svg__fa-w-14\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 448 512\",\n      width: \"1em\",\n      height: \"1em\"\n    }, t), I || (I = e.createElement(\"path\", {\n      fill: \"currentColor\",\n      d: \"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\n    })));\n  };\nfunction Z() {\n  return Z = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a]);\n    }\n    return e;\n  }, Z.apply(this, arguments);\n}\nvar D = function (t) {\n  return e.createElement(\"svg\", Z({\n    \"aria-hidden\": \"true\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"compress\",\n    className: \"compress-solid_svg__svg-inline--fa compress-solid_svg__fa-compress compress-solid_svg__fa-w-14\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 448 512\",\n    width: \"1em\",\n    height: \"1em\"\n  }, t), R || (R = e.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\n  })));\n};\nconst q = _ref4 => {\n    let {\n      id: e,\n      className: n,\n      style: a,\n      children: r\n    } = _ref4;\n    const {\n        isFullScreen: s,\n        toggle: c\n      } = k(),\n      l = {\n        className: `react-sigma-control ${n || \"\"}`,\n        id: e,\n        style: a\n      };\n    return document.fullscreenEnabled ? t.createElement(\"div\", Object.assign({}, l), t.createElement(\"button\", {\n      onClick: c,\n      title: s ? \"Exit fullscreen\" : \"Enter fullscreen\"\n    }, r && !s && r[0], r && s && r[1], !r && !s && t.createElement(W, {\n      style: {\n        width: \"1em\"\n      }\n    }), !r && s && t.createElement(D, {\n      style: {\n        width: \"1em\"\n      }\n    }))) : null;\n  },\n  A = _ref5 => {\n    let {\n      id: e,\n      className: n,\n      style: a\n    } = _ref5;\n    const c = p(),\n      l = _(),\n      {\n        gotoNode: o\n      } = j(),\n      [i, d] = r(\"\"),\n      [u, g] = r([]),\n      [m, h] = r(null),\n      [v, f] = r(\"\");\n    s(() => {\n      f(`search-${Math.random().toString(36).slice(2)}`);\n    }, []), s(() => {\n      const e = [];\n      !m && i.length > 1 && c.getGraph().forEachNode((t, n) => {\n        n.label && n.label.toLowerCase().includes(i.toLowerCase()) && e.push({\n          id: t,\n          label: n.label\n        });\n      }), g(e);\n    }, [i]), s(() => {\n      l({\n        clickStage: () => {\n          h(null), d(\"\");\n        }\n      });\n    }, [l]), s(() => {\n      if (m) return c.getGraph().setNodeAttribute(m, \"highlighted\", !0), o(m), () => {\n        c.getGraph().setNodeAttribute(m, \"highlighted\", !1);\n      };\n    }, [m]);\n    const E = {\n      className: `react-sigma-search ${n || \"\"}`,\n      id: e,\n      style: a\n    };\n    return t.createElement(\"div\", Object.assign({}, E), t.createElement(\"label\", {\n      htmlFor: v,\n      style: {\n        display: \"none\"\n      }\n    }, \"Search a node\"), t.createElement(\"input\", {\n      id: v,\n      type: \"text\",\n      placeholder: \"Search...\",\n      list: `${v}-datalist`,\n      value: i,\n      onChange: e => {\n        const t = e.target.value,\n          n = u.find(e => e.label === t);\n        n ? (d(n.label), g([]), h(n.id)) : (h(null), d(t));\n      }\n    }), t.createElement(\"datalist\", {\n      id: `${v}-datalist`\n    }, u.map(e => t.createElement(\"option\", {\n      key: e.id,\n      value: e.label\n    }, e.label))));\n  };\nexport { N as ControlsContainer, q as FullScreenControl, A as SearchControl, x as SigmaContainer, h as SigmaContext, v as SigmaProvider, B as ZoomControl, j as useCamera, k as useFullScreen, y as useLoadGraph, _ as useRegisterEvents, E as useSetSettings, p as useSigma, f as useSigmaContext };","map":{"version":3,"mappings":"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","names":["SigmaContext","createContext","SigmaProvider","Provider","useSigmaContext","context","useContext","Error","useSigma","sigma","useSetSettings","container","settings","setSettings","useState","useEffect","prevSettings","Object","keys","forEach","key","setSetting","offsetWidth","offsetHeight","sigmaEvents","mouseEvents","touchEvents","cameraEvents","useRegisterEvents","eventHandlers","setEventHandlers","userEvents","eventTypes","edgeSettings","reverseEdgeSettings","sigmaSettings","getSettings","some","event","includes","enableEdgeClickEvents","enableEdgeHoverEvents","enableEdgeWheelEvents","length","eventHandler","find","e","on","getMouseCaptor","getTouchCaptor","getCamera","off","useLoadGraph","useCallback","graph","clear","getGraph","order","import","refresh","useCamera","options","defaultOptions","useRef","isEqual","current","zoomIn","animatedZoom","zoomOut","animatedUnzoom","reset","animatedReset","goto","state","animate","gotoNode","nodeKey","nodeDisplayData","getNodeDisplayData","console","log","useFullScreen","isFullScreen","setFullScreen","toggleState","v","document","addEventListener","removeEventListener","toggle","dom","fullscreenElement","requestFullscreen","exitFullscreen","SigmaContainer","forwardRef","ref","id","className","style","children","rootRef","containerRef","props","setSigma","instance","sigGraph","Graph","Sigma","allowInvalidContainer","kill","useImperativeHandle","useMemo","contents","React","createElement","value","ControlsContainer","position","c","_path","_extends","assign","bind","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","SvgPlusSolid","xmlns","viewBox","width","height","fill","d","SvgMinusSolid","SvgDotCircleRegular","animationDuration","duration","factor","htmlProps","onClick","title","ZoomInIcon","ZoomOutIcon","ZoomResetIcon","SvgExpandSolid","SvgCompressSolid","FullScreenControl","a","fullscreenEnabled","SearchControl","registerEvents","search","setSearch","values","setValues","selected","setSelected","inputId","setInputId","Math","random","toString","slice","newValues","forEachNode","attributes","label","toLowerCase","push","clickStage","setNodeAttribute","htmlFor","display","type","placeholder","list","onChange","searchString","valueItem","map"],"sources":["/Users/djs/Downloads/VisualizingTwitchCommunities-AutoAtlasGeneration/web-react/node_modules/@react-sigma/core/src/hooks/context.ts","/Users/djs/Downloads/VisualizingTwitchCommunities-AutoAtlasGeneration/web-react/node_modules/@react-sigma/core/src/hooks/useSigma.ts","/Users/djs/Downloads/VisualizingTwitchCommunities-AutoAtlasGeneration/web-react/node_modules/@react-sigma/core/src/hooks/useSetSettings.ts","/Users/djs/Downloads/VisualizingTwitchCommunities-AutoAtlasGeneration/web-react/node_modules/@react-sigma/core/src/hooks/useRegisterEvents.ts","/Users/djs/Downloads/VisualizingTwitchCommunities-AutoAtlasGeneration/web-react/node_modules/@react-sigma/core/src/hooks/useLoadGraph.ts","/Users/djs/Downloads/VisualizingTwitchCommunities-AutoAtlasGeneration/web-react/node_modules/@react-sigma/core/src/hooks/useCamera.ts","/Users/djs/Downloads/VisualizingTwitchCommunities-AutoAtlasGeneration/web-react/node_modules/@react-sigma/core/src/hooks/useFullScreen.ts","/Users/djs/Downloads/VisualizingTwitchCommunities-AutoAtlasGeneration/web-react/node_modules/@react-sigma/core/src/components/SigmaContainer.tsx","/Users/djs/Downloads/VisualizingTwitchCommunities-AutoAtlasGeneration/web-react/node_modules/@react-sigma/core/src/components/controls/ControlsContainer.tsx","/Users/djs/Downloads/VisualizingTwitchCommunities-AutoAtlasGeneration/web-react/node_modules/@react-sigma/core/src/assets/icons/plus-solid.svg","/Users/djs/Downloads/VisualizingTwitchCommunities-AutoAtlasGeneration/web-react/node_modules/@react-sigma/core/src/assets/icons/minus-solid.svg","/Users/djs/Downloads/VisualizingTwitchCommunities-AutoAtlasGeneration/web-react/node_modules/@react-sigma/core/src/assets/icons/dot-circle-regular.svg","/Users/djs/Downloads/VisualizingTwitchCommunities-AutoAtlasGeneration/web-react/node_modules/@react-sigma/core/src/components/controls/ZoomControl.tsx","/Users/djs/Downloads/VisualizingTwitchCommunities-AutoAtlasGeneration/web-react/node_modules/@react-sigma/core/src/assets/icons/expand-solid.svg","/Users/djs/Downloads/VisualizingTwitchCommunities-AutoAtlasGeneration/web-react/node_modules/@react-sigma/core/src/assets/icons/compress-solid.svg","/Users/djs/Downloads/VisualizingTwitchCommunities-AutoAtlasGeneration/web-react/node_modules/@react-sigma/core/src/components/controls/FullScreenControl.tsx","/Users/djs/Downloads/VisualizingTwitchCommunities-AutoAtlasGeneration/web-react/node_modules/@react-sigma/core/src/components/controls/SearchControl.tsx","/Users/djs/Downloads/VisualizingTwitchCommunities-AutoAtlasGeneration/web-react/node_modules/@react-sigma/core/src/utils.ts"],"sourcesContent":["import { createContext, useContext } from \"react\";\nimport Sigma from \"sigma/sigma\";\n\nexport interface SigmaContextInterface {\n  sigma: Sigma;\n  container: HTMLElement;\n}\n\n/**\n * @hidden\n */\nexport const SigmaContext = createContext<SigmaContextInterface | null>(null);\n\n/**\n * @hidden\n */\nexport const SigmaProvider = SigmaContext.Provider;\n\n/**\n * React hook that store the sigma and html container reference.\n *\n * ```typescript\n * const {sigma, container} = useSigmaContext();\n *```\n * See [[SigmaContextInterface]] for more information.\n *\n * @category Hook\n */\nexport function useSigmaContext(): SigmaContextInterface {\n  const context = useContext(SigmaContext);\n  if (context == null) {\n    throw new Error(\"No context provided: useSigmaContext() can only be used in a descendant of <SigmaContainer>\");\n  }\n  return context;\n}\n","import Sigma from \"sigma/sigma\";\n\nimport { useSigmaContext } from \"./context\";\n\n/**\n * React hook to retrieve the sigma instance (from the context).\n *\n * ```typescript\n * const sigma = useSigma();\n *```\n * @category Hook\n */\nexport function useSigma(): Sigma {\n  return useSigmaContext().sigma;\n}\n","import { useEffect, useState } from \"react\";\nimport { Settings } from \"sigma/settings\";\n\nimport { useSigmaContext } from \"./context\";\n\n/**\n * React hook that helps you to update Sigma’s settings.\n *\n * ```typescript\n * const setSettings = useSetSettings();\n * setSettings({\n *  hideEdgesOnMove: true,\n *  hideLabelsOnMove: true,\n * });\n *```\n * @category Hook\n */\nexport function useSetSettings(): (newSettings: Partial<Settings>) => void {\n  const { sigma, container } = useSigmaContext();\n  const [settings, setSettings] = useState<Partial<Settings>>({});\n\n  useEffect(() => {\n    if (!sigma || !settings) {\n      return;\n    }\n\n    const prevSettings: Partial<Settings> = {};\n\n    (Object.keys(settings) as Array<keyof Settings>).forEach(key => {\n      // as never because of https://stackoverflow.com/questions/58656353/how-to-avoid-dynamic-keyof-object-assign-error-in-typescript\n      prevSettings[key] = settings[key] as never;\n      sigma.setSetting(key, settings[key] as never);\n    });\n\n    // cleanup\n    return () => {\n      if (sigma && container && container.offsetWidth > 0 && container.offsetHeight > 0) {\n        (Object.keys(prevSettings) as Array<keyof Settings>).forEach(key => {\n          // as never because of https://stackoverflow.com/questions/58656353/how-to-avoid-dynamic-keyof-object-assign-error-in-typescript\n          sigma.setSetting(key, prevSettings[key] as never);\n        });\n      }\n    };\n  }, [sigma, settings, container]);\n\n  return setSettings;\n}\n","import { useEffect, useState } from \"react\";\nimport { Settings } from \"sigma/settings\";\nimport { SigmaEvents } from \"sigma/sigma\";\nimport { TouchCaptorEvents } from \"sigma/core/captors/touch\";\nimport { MouseCaptorEvents } from \"sigma/core/captors/mouse\";\nimport { CameraEvents } from \"sigma/core/camera\";\n\nimport { useSigma } from \"./useSigma\";\nimport { useSetSettings } from \"./useSetSettings\";\nimport { EventHandlers } from \"../types\";\n\ntype EventType = keyof EventHandlers;\n\nconst sigmaEvents: Array<keyof SigmaEvents> = [\n  \"clickNode\",\n  \"rightClickNode\",\n  \"downNode\",\n  \"enterNode\",\n  \"leaveNode\",\n  \"doubleClickNode\",\n  \"wheelNode\",\n  \"clickEdge\",\n  \"rightClickEdge\",\n  \"downEdge\",\n  \"enterEdge\",\n  \"leaveEdge\",\n  \"doubleClickEdge\",\n  \"wheelEdge\",\n  \"clickStage\",\n  \"rightClickStage\",\n  \"downStage\",\n  \"doubleClickStage\",\n  \"wheelStage\",\n  \"kill\",\n];\nconst mouseEvents: Array<keyof MouseCaptorEvents> = [\n  \"click\",\n  \"rightClick\",\n  \"mouseup\",\n  \"mousedown\",\n  \"mousemove\",\n  \"mousemovebody\",\n  \"doubleClick\",\n  \"wheel\",\n];\nconst touchEvents: Array<keyof TouchCaptorEvents> = [\"touchup\", \"touchdown\", \"touchmove\"];\nconst cameraEvents: Array<keyof CameraEvents> = [\"updated\"];\n\n/**\n * React hook that helps you to listen Sigma’s events.\n * It handles for you all the lifecyle of listener (ie. on / remove)\n *\n * ```typescript\n * const registerEvents = useRegisterEvents();\n * registerEvents({\n *  enterNode: event => setHoveredNode(event.node),\n *  leaveNode: event => setHoveredNode(null),\n * });\n *```\n * @category Hook\n */\nexport function useRegisterEvents(): (eventHandlers: Partial<EventHandlers>) => void {\n  const sigma = useSigma();\n  const setSettings = useSetSettings();\n  const [eventHandlers, setEventHandlers] = useState<Partial<EventHandlers>>({});\n\n  useEffect(() => {\n    if (!sigma || !eventHandlers) {\n      return;\n    }\n\n    const userEvents = eventHandlers;\n\n    // list of event types to register\n    const eventTypes = Object.keys(userEvents) as Array<EventType>;\n\n    // Set settings for edge event if needed\n    const edgeSettings: Partial<Settings> = {};\n    const reverseEdgeSettings: Partial<Settings> = {};\n    const sigmaSettings = sigma.getSettings();\n    if (\n      eventTypes.some((event) => [\"clickEdge\", \"rightClickEdge\", \"doubleClickEdge\", \"downEdge\"].includes(event)) &&\n      sigmaSettings.enableEdgeClickEvents === false\n    ) {\n      edgeSettings[\"enableEdgeClickEvents\"] = true;\n      reverseEdgeSettings[\"enableEdgeClickEvents\"] = false;\n    }\n    if (\n      eventTypes.some((event) => [\"enterEdge\", \"leaveEdge\"].includes(event)) &&\n      sigmaSettings.enableEdgeHoverEvents === false\n    ) {\n      edgeSettings[\"enableEdgeHoverEvents\"] = true;\n      reverseEdgeSettings[\"enableEdgeHoverEvents\"] = false;\n    }\n    if (eventTypes.some((event) => [\"wheelEdge\"].includes(event)) && sigmaSettings.enableEdgeWheelEvents === false) {\n      edgeSettings[\"enableEdgeWheelEvents\"] = true;\n      reverseEdgeSettings[\"enableEdgeWheelEvents\"] = false;\n    }\n    if (Object.keys(edgeSettings).length > 0) {\n      setSettings(edgeSettings);\n    }\n\n    eventTypes.forEach((event: EventType) => {\n      const eventHandler = userEvents[event] as (...args: unknown[]) => void;\n      if (sigmaEvents.find((e) => e === event)) {\n        sigma.on(event as keyof SigmaEvents, eventHandler);\n      }\n      if (mouseEvents.find((e) => e === event)) {\n        //eslint-disable-next-line @typescript-eslint/no-explicit-any\n        sigma.getMouseCaptor().on(event as keyof MouseCaptorEvents, eventHandler);\n      }\n      if (touchEvents.find((e) => e === event)) {\n        //eslint-disable-next-line @typescript-eslint/no-explicit-any\n        sigma.getTouchCaptor().on(event as keyof TouchCaptorEvents, eventHandler);\n      }\n      if (cameraEvents.find((e) => e === event)) {\n        sigma.getCamera().on(event as keyof CameraEvents, eventHandler);\n      }\n    });\n\n    // cleanup\n    return () => {\n      // Reverse settings\n      if (Object.keys(reverseEdgeSettings).length > 0) {\n        setSettings(reverseEdgeSettings);\n      }\n\n      // remove events listener\n      if (sigma) {\n        eventTypes.forEach((event: EventType) => {\n          const eventHandler = userEvents[event] as (...args: unknown[]) => void;\n          if (sigmaEvents.find((e) => e === event)) {\n            sigma.off(event as keyof SigmaEvents, eventHandler);\n          }\n          if (mouseEvents.find((e) => e === event)) {\n            sigma.getMouseCaptor().off(event as keyof MouseCaptorEvents, eventHandler);\n          }\n          if (touchEvents.find((e) => e === event)) {\n            sigma.getTouchCaptor().off(event as keyof TouchCaptorEvents, eventHandler);\n          }\n          if (cameraEvents.find((e) => e === event)) {\n            sigma.getCamera().off(event as keyof CameraEvents, eventHandler);\n          }\n        });\n      }\n    };\n  }, [sigma, eventHandlers, setSettings]);\n\n  return setEventHandlers;\n}\n","import { useCallback } from \"react\";\nimport Graph from \"graphology\";\n\nimport { useSigma } from \"./useSigma\";\n\n/**\n * React hook that helps you to load a graph.\n * If a graph was previously loaded in Sigma/Graphology, per default it is cleared.\n * You can change this behaviour by settings the parameter `clear` to false.\n *\n * ```typescript\n * const loadGraph = useLoadGraph();\n * loadGraph(erdosRenyi(UndirectedGraph, { order: 100, probability: 0.2 }), true);\n *```\n * @category Hook\n */\nexport function useLoadGraph(): (graph: Graph, clear?: boolean) => void {\n  const sigma = useSigma();\n\n  return useCallback(\n    (graph: Graph, clear = true) => {\n      if (sigma && graph) {\n        if (clear && sigma.getGraph().order > 0) sigma.getGraph().clear();\n        sigma.getGraph().import(graph);\n        sigma.refresh();\n      }\n    },\n    [sigma],\n  );\n}\n","import { useCallback, useRef } from \"react\";\nimport { isEqual } from \"lodash\";\nimport { AnimateOptions } from \"sigma/utils/animate\";\nimport { CameraState } from \"sigma/types\";\n\nimport { useSigma } from \"./useSigma\";\n\ntype CameraOptions = Partial<AnimateOptions> & { factor?: number };\n\n/**\n * React hook that helps you to manage the camera.\n *\n * ```typescript\n * const {zoomIn, zoomOut, reset, goto, gotoNode } = useCamera();\n *```\n *\n * @category Hook\n */\nexport function useCamera(\n  options?: CameraOptions,\n): {\n  zoomIn: (options?: CameraOptions) => void;\n  zoomOut: (options?: CameraOptions) => void;\n  reset: (options?: Partial<AnimateOptions>) => void;\n  goto: (state: Partial<CameraState>, options?: Partial<AnimateOptions>) => void;\n  gotoNode: (nodeKey: string, options?: Partial<AnimateOptions>) => void;\n} {\n  const sigma = useSigma();\n  // Default camera options\n  const defaultOptions = useRef<CameraOptions>();\n  if (!isEqual(defaultOptions.current, options)) defaultOptions.current = options;\n\n  const zoomIn = useCallback(\n    (options?: CameraOptions) => {\n      sigma.getCamera().animatedZoom({ ...defaultOptions.current, ...options });\n    },\n    [sigma, defaultOptions],\n  );\n\n  const zoomOut = useCallback(\n    (options?: CameraOptions) => {\n      sigma.getCamera().animatedUnzoom({ ...defaultOptions.current, ...options });\n    },\n    [sigma, defaultOptions],\n  );\n\n  const reset = useCallback(\n    (options?: Partial<AnimateOptions>) => {\n      sigma.getCamera().animatedReset({ ...defaultOptions.current, ...options });\n    },\n    [sigma, defaultOptions],\n  );\n\n  const goto = useCallback(\n    (state: Partial<CameraState>, options?: Partial<AnimateOptions>) => {\n      sigma.getCamera().animate(state, { ...defaultOptions.current, ...options });\n    },\n    [sigma, defaultOptions],\n  );\n\n  const gotoNode = useCallback(\n    (nodeKey: string, options?: Partial<AnimateOptions>) => {\n      const nodeDisplayData = sigma.getNodeDisplayData(nodeKey);\n      if (nodeDisplayData) sigma.getCamera().animate(nodeDisplayData, { ...defaultOptions.current, ...options });\n      else console.log(`Node ${nodeKey} not found`);\n    },\n    [sigma, defaultOptions],\n  );\n\n  return { zoomIn, zoomOut, reset, goto, gotoNode };\n}\n","import { useEffect, useState, useCallback } from \"react\";\nimport { useSigmaContext } from \"./context\";\n\nfunction toggleFullScreen(dom: HTMLElement) {\n  if (document.fullscreenElement !== dom) {\n    dom.requestFullscreen();\n  } else {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    }\n  }\n}\n\n/**\n * React hook that helps you to set graph in fullmode.\n *\n * ```typescript\n * const {toggle, isFullScreen} = useFullscreen();\n *```\n * @category Hook\n */\nexport function useFullScreen(): { toggle: () => void; isFullScreen: boolean } {\n  const { container } = useSigmaContext();\n  const [isFullScreen, setFullScreen] = useState<boolean>(false);\n  const toggleState = () => setFullScreen(v => !v);\n\n  useEffect(() => {\n    document.addEventListener(\"fullscreenchange\", toggleState);\n    return () => document.removeEventListener(\"fullscreenchange\", toggleState);\n  }, [toggleState]);\n\n  const toggle = useCallback(() => {\n    toggleFullScreen(container);\n  }, [container]);\n\n  return {\n    toggle,\n    isFullScreen,\n  };\n}\n","import React, {\n  CSSProperties,\n  Ref,\n  PropsWithChildren,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { isEqual } from \"lodash\";\nimport Graph from \"graphology\";\nimport { GraphConstructor } from \"graphology-types\";\nimport { Sigma } from \"sigma\";\nimport { Settings } from \"sigma/settings\";\n\nimport { SigmaProvider } from \"../hooks/context\";\n\n/**\n * Properties for `SigmaContainer` component\n */\nexport interface SigmaContainerProps {\n  /**\n   * Graphology instance or constructor\n   */\n  graph?: Graph | GraphConstructor;\n  /**\n   * Sigma settings\n   */\n  settings?: Partial<Settings>;\n  /**\n   * HTML id\n   */\n  id?: string;\n  /**\n   * HTML class\n   */\n  className?: string;\n  /**\n   * HTML CSS style\n   */\n  style?: CSSProperties;\n}\n\n/**\n * The `SigmaContainer` component is responsible of create the Sigma instance, and provide it to its child components using a React Context that can be accessible via the hook {@link useSigma}.\n *\n * ```jsx\n * <SigmaContainer id=\"sigma-graph\">\n *   <MyCustomGraph />\n * </SigmaContainer>\n *```\n * See [[SigmaContainerProps]] for more information.\n *\n * @category Component\n */\n// eslint-disable-next-line react/display-name\nconst SigmaContainerComponent = (\n  { graph, id, className, style, settings, children }: PropsWithChildren<SigmaContainerProps>,\n  ref: Ref<Sigma | null>,\n) => {\n  // Root HTML element\n  const rootRef = useRef<HTMLDivElement>(null);\n  // HTML element for the sigma instance\n  const containerRef = useRef<HTMLDivElement>(null);\n  // Common html props for the container\n  const props = { className: `react-sigma ${className ? className : \"\"}`, id, style };\n  // Sigma instance\n  const [sigma, setSigma] = useState<Sigma | null>(null);\n  // Sigma settings\n  const sigmaSettings = useRef<Partial<Settings>>({});\n  if (!isEqual(sigmaSettings.current, settings)) sigmaSettings.current = settings || {};\n\n  /**\n   * When graph or settings changed\n   * => create sigma\n   */\n  useEffect(() => {\n    let instance: Sigma | null = null;\n\n    if (containerRef.current !== null) {\n      const sigGraph = graph ? (typeof graph === \"function\" ? new graph() : graph) : new Graph();\n      instance = new Sigma(sigGraph, containerRef.current, { allowInvalidContainer: true, ...sigmaSettings.current });\n    }\n    setSigma(instance);\n\n    return () => {\n      if (instance) {\n        instance.kill();\n      }\n      setSigma(null);\n    };\n  }, [containerRef, graph, sigmaSettings]);\n\n  /**\n   * Forward the sigma ref\n   */\n  useImperativeHandle(ref, () => sigma, [sigma]);\n\n  /**\n   * Memoify the context\n   */\n  const context = useMemo(\n    () => (sigma && rootRef.current ? { sigma, container: rootRef.current as HTMLElement } : null),\n    [sigma, rootRef.current],\n  );\n\n  // When context is created we provide it to children\n  const contents = context !== null ? <SigmaProvider value={context}>{children}</SigmaProvider> : null;\n\n  return (\n    <div {...props} ref={rootRef}>\n      <div className=\"sigma-container\" ref={containerRef} />\n      {contents}\n    </div>\n  );\n};\n\nexport const SigmaContainer = forwardRef(SigmaContainerComponent);\n","import React, { CSSProperties, ReactNode } from \"react\";\n\n/**\n * Properties for `ControlsContainer` component.\n */\nexport interface ControlsContainerProps {\n  /**\n   * HTML id\n   */\n  id?: string;\n  /**\n   * HTML class\n   */\n  className?: string;\n  /**\n   * HTML CSS style\n   */\n  style?: CSSProperties;\n  /**\n   * Position of the container\n   */\n  position?: \"top-right\" | \"top-left\" | \"bottom-right\" | \"bottom-left\";\n  /*\n   * @hidden\n   */\n  children?: ReactNode;\n}\n\n/**\n * The `ControlsContainer` is just a wrapper for other control components.\n * It defines their position and also their style with its CSS class `react-sigma-controls`.\n *\n * ```jsx\n * <SigmaContainer>\n *   <ControlsContainer position={\"bottom-right\"}>\n *     <ForceAtlasControl autoRunFor={2000} />\n *   </ControlsContainer>\n * </SigmaContainer>\n * ```\n * See [[ControlsContainerProps]] for more information.\n *\n * @category Component\n */\nexport const ControlsContainer: React.FC<ControlsContainerProps> = ({\n  id,\n  className,\n  style,\n  children,\n  position = \"bottom-left\",\n}: ControlsContainerProps) => {\n  // Common html props for the container\n  const props = { className: `react-sigma-controls ${className ? className : \"\"} ${position}`, id, style };\n\n  return <div {...props}>{children}</div>;\n};\n","export default \"data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20focusable%3D%22false%22%20data-prefix%3D%22fas%22%20data-icon%3D%22plus%22%20class%3D%22svg-inline--fa%20fa-plus%20fa-w-14%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20448%20512%22%3E%20%20%3Cpath%20fill%3D%22currentColor%22%20d%3D%22M416%20208H272V64c0-17.67-14.33-32-32-32h-32c-17.67%200-32%2014.33-32%2032v144H32c-17.67%200-32%2014.33-32%2032v32c0%2017.67%2014.33%2032%2032%2032h144v144c0%2017.67%2014.33%2032%2032%2032h32c17.67%200%2032-14.33%2032-32V304h144c17.67%200%2032-14.33%2032-32v-32c0-17.67-14.33-32-32-32z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E\"","export default \"data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20focusable%3D%22false%22%20data-prefix%3D%22fas%22%20data-icon%3D%22minus%22%20class%3D%22svg-inline--fa%20fa-minus%20fa-w-14%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20448%20512%22%3E%3Cpath%20fill%3D%22currentColor%22%20d%3D%22M416%20208H32c-17.67%200-32%2014.33-32%2032v32c0%2017.67%2014.33%2032%2032%2032h384c17.67%200%2032-14.33%2032-32v-32c0-17.67-14.33-32-32-32z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E\"","export default \"data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20focusable%3D%22false%22%20data-prefix%3D%22far%22%20data-icon%3D%22dot-circle%22%20class%3D%22svg-inline--fa%20fa-dot-circle%20fa-w-16%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%3E%3Cpath%20fill%3D%22currentColor%22%20d%3D%22M256%2056c110.532%200%20200%2089.451%20200%20200%200%20110.532-89.451%20200-200%20200-110.532%200-200-89.451-200-200%200-110.532%2089.451-200%20200-200m0-48C119.033%208%208%20119.033%208%20256s111.033%20248%20248%20248%20248-111.033%20248-248S392.967%208%20256%208zm0%20168c-44.183%200-80%2035.817-80%2080s35.817%2080%2080%2080%2080-35.817%2080-80-35.817-80-80-80z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E\"","import React, { CSSProperties } from \"react\";\n\nimport { ReactComponent as ZoomInIcon } from \"../../assets/icons/plus-solid.svg\";\nimport { ReactComponent as ZoomOutIcon } from \"../../assets/icons/minus-solid.svg\";\nimport { ReactComponent as ZoomResetIcon } from \"../../assets/icons/dot-circle-regular.svg\";\nimport { useCamera } from \"../../hooks/useCamera\";\n\n/**\n * Properties for `ZoomControl` component\n */\nexport interface ZoomControlProps {\n  /**\n   * HTML class that will be added to all div button wrapper\n   */\n  className?: string;\n\n  /**\n   * HTML CSS style that will be added to all div button wrapper\n   */\n  style?: CSSProperties;\n\n  /**\n   * Number of ms for the zoom animation (default is 200ms)\n   */\n  animationDuration?: number;\n  /**\n   * It's possible to customize the button, by passing to JSX Element.\n   * First one is for the \"zoom in\", second for \"zoom out\" and third for \"view whole graph\".\n   * Example :\n   * ```jsx\n   * <ZoomControl>\n   *   <>\n   *     <BsZoomIn />\n   *     <BsZoomOut />\n   *     <BiReset />\n   *   </>\n   * </FullScreenControl>\n   * ```\n   */\n  children?: [JSX.Element, JSX.Element, JSX.Element];\n}\n\n/**\n * The `ZoomControl` create three UI buttons that allows the user to\n * - zoom in\n * - zoom out\n * - reset zoom (ie. see the whole graph)\n *\n * ```jsx\n * <SigmaContainer>\n *   <ControlsContainer>\n *     <ZoomControl />\n *   </ControlsContainer>\n * </SigmaContainer>\n * ```\n * See [[ZoomControlProps]] for more information.\n *\n * @category Component\n */\nexport const ZoomControl: React.FC<ZoomControlProps> = ({\n  className,\n  style,\n  animationDuration = 200,\n  children,\n}: ZoomControlProps) => {\n  const { zoomIn, zoomOut, reset } = useCamera({ duration: animationDuration, factor: 1.5 });\n\n  // Common html props for the div wrapper\n  const htmlProps = {\n    style,\n    className: `react-sigma-control ${className || \"\"}`,\n  };\n\n  return (\n    <>\n      <div {...htmlProps}>\n        <button onClick={() => zoomIn()} title=\"Zoom In\">\n          {children ? children[0] : <ZoomInIcon style={{ width: \"1em\" }} />}\n        </button>\n      </div>\n      <div {...htmlProps}>\n        <button onClick={() => zoomOut()} title=\"Zoom Out\">\n          {children ? children[1] : <ZoomOutIcon style={{ width: \"1em\" }} />}\n        </button>\n      </div>\n      <div {...htmlProps}>\n        <button onClick={() => reset()} title=\"See whole graph\">\n          {children ? children[2] : <ZoomResetIcon style={{ width: \"1em\" }} />}\n        </button>\n      </div>\n    </>\n  );\n};\n","export default \"data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20focusable%3D%22false%22%20data-prefix%3D%22fas%22%20data-icon%3D%22expand%22%20class%3D%22svg-inline--fa%20fa-expand%20fa-w-14%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20448%20512%22%3E%3Cpath%20fill%3D%22currentColor%22%20d%3D%22M0%20180V56c0-13.3%2010.7-24%2024-24h124c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012H64v84c0%206.6-5.4%2012-12%2012H12c-6.6%200-12-5.4-12-12zM288%2044v40c0%206.6%205.4%2012%2012%2012h84v84c0%206.6%205.4%2012%2012%2012h40c6.6%200%2012-5.4%2012-12V56c0-13.3-10.7-24-24-24H300c-6.6%200-12%205.4-12%2012zm148%20276h-40c-6.6%200-12%205.4-12%2012v84h-84c-6.6%200-12%205.4-12%2012v40c0%206.6%205.4%2012%2012%2012h124c13.3%200%2024-10.7%2024-24V332c0-6.6-5.4-12-12-12zM160%20468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6%200-12%205.4-12%2012v124c0%2013.3%2010.7%2024%2024%2024h124c6.6%200%2012-5.4%2012-12z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E\"","export default \"data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20focusable%3D%22false%22%20data-prefix%3D%22fas%22%20data-icon%3D%22compress%22%20class%3D%22svg-inline--fa%20fa-compress%20fa-w-14%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20448%20512%22%3E%3Cpath%20fill%3D%22currentColor%22%20d%3D%22M436%20192H312c-13.3%200-24-10.7-24-24V44c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v84h84c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6%200-12%205.4-12%2012v84H12c-6.6%200-12%205.4-12%2012v40c0%206.6%205.4%2012%2012%2012h124c13.3%200%2024-10.7%2024-24zm0%20300V344c0-13.3-10.7-24-24-24H12c-6.6%200-12%205.4-12%2012v40c0%206.6%205.4%2012%2012%2012h84v84c0%206.6%205.4%2012%2012%2012h40c6.6%200%2012-5.4%2012-12zm192%200v-84h84c6.6%200%2012-5.4%2012-12v-40c0-6.6-5.4-12-12-12H312c-13.3%200-24%2010.7-24%2024v124c0%206.6%205.4%2012%2012%2012h40c6.6%200%2012-5.4%2012-12z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E\"","import React, { CSSProperties } from \"react\";\n\nimport { ReactComponent as EnterIcon } from \"../../assets/icons/expand-solid.svg\";\nimport { ReactComponent as ExitIcon} from \"../../assets/icons/compress-solid.svg\";\nimport { useFullScreen } from \"../../hooks/useFullScreen\";\n\n/**\n * Properties for `FullScreenControl` component.\n */\nexport interface FullScreenControlProps {\n  /**\n   * HTML id\n   */\n  id?: string;\n\n  /**\n   * HTML class\n   */\n  className?: string;\n\n  /**\n   * HTML CSS style\n   */\n  style?: CSSProperties;\n\n  /**\n   * It's possible to customize the button, by passing to JSX Element.\n   * First one is for the \"enter fullscreen\", and the second to \"exit fullscreen\".\n   * Example :\n   * ```jsx\n   * <FullScreenControl>\n   *   <>\n   *     <BiFullscreen />\n   *     <BiExitFullscreen />\n   *   </>\n   * </FullScreenControl>\n   * ```\n   */\n  children?: [JSX.Element, JSX.Element];\n}\n\n/**\n * The `FullScreenControl` create a UI button that allows the user to display the graph in fullscreen\n *\n * ```jsx\n * <SigmaContainer>\n *   <ControlsContainer>\n *     <FullScreenControl />\n *   </ControlsContainer>\n * </SigmaContainer>\n * ```\n * See [[FullScreenControlProps]] for more information.\n *\n * @category Component\n */\nexport const FullScreenControl: React.FC<FullScreenControlProps> = ({\n  id,\n  className,\n  style,\n  children,\n}: FullScreenControlProps) => {\n  // Get Sigma\n  const { isFullScreen, toggle } = useFullScreen();\n\n  // Common html props for the div\n  const htmlProps = {\n    className: `react-sigma-control ${className || \"\"}`,\n    id,\n    style,\n  };\n\n  if (!document.fullscreenEnabled) return null;\n\n  return (\n    <div {...htmlProps}>\n      <button onClick={toggle} title={isFullScreen ? \"Exit fullscreen\" : \"Enter fullscreen\"}>\n        {children && !isFullScreen && children[0]}\n        {children && isFullScreen && children[1]}\n        {!children && !isFullScreen && <EnterIcon style={{width:\"1em\"}}/>}\n        {!children && isFullScreen && <ExitIcon style={{width:\"1em\"}}/>}\n      </button>\n    </div>\n  );\n};\n","import React, { ChangeEvent, useEffect, useState, CSSProperties } from \"react\";\nimport { Attributes } from \"graphology-types\";\n\nimport { getUniqueKey } from \"../../utils\";\nimport { useSigma } from \"../../hooks/useSigma\";\nimport { useCamera } from \"../../hooks/useCamera\";\nimport { useRegisterEvents } from \"../../hooks/useRegisterEvents\";\n\n/**\n * Properties for `SearchControl` component\n */\nexport interface SearchControlProps {\n  /**\n   * HTML id\n   */\n  id?: string;\n\n  /**\n   * HTML class\n   */\n  className?: string;\n\n  /**\n   * HTML CSS style\n   */\n  style?: CSSProperties;\n}\n\n/**\n * The `SearchControl` create an input text where user can search a node in the graph by its label.\n * There is an autocomplete based on includes & lower case.\n * When a node is found, the graph will focus on the highlighted node\n *\n * ```jsx\n * <SigmaContainer>\n *   <ControlsContainer>\n *     <SearchControl />\n *   </ControlsContainer>\n * </SigmaContainer>\n * ```\n * See [[SearchControlProps]] for more information.\n *\n * @category Component\n */\nexport const SearchControl: React.FC<SearchControlProps> = ({ id, className, style }: SearchControlProps) => {\n  // Get sigma\n  const sigma = useSigma();\n  // Get event hook\n  const registerEvents = useRegisterEvents();\n  // Get camera hook\n  const { gotoNode } = useCamera();\n  // Search value\n  const [search, setSearch] = useState<string>(\"\");\n  // Datalist values\n  const [values, setValues] = useState<Array<{ id: string; label: string }>>([]);\n  // Selected\n  const [selected, setSelected] = useState<string | null>(null);\n  // random id for the input\n  const [inputId, setInputId] = useState<string>(\"\");\n\n  /**\n   * When component mount, we set a random input id.\n   */\n  useEffect(() => {\n    setInputId(`search-${getUniqueKey()}`);\n  }, []);\n\n  /**\n   * When the search input changes, recompute the autocomplete values.\n   */\n  useEffect(() => {\n    const newValues: Array<{ id: string; label: string }> = [];\n    if (!selected && search.length > 1) {\n      sigma.getGraph().forEachNode((key: string, attributes: Attributes): void => {\n        if (attributes.label && attributes.label.toLowerCase().includes(search.toLowerCase()))\n          newValues.push({ id: key, label: attributes.label });\n      });\n    }\n    setValues(newValues);\n  }, [search]);\n\n  /**\n   * When use clik on the stage\n   *  => reset the selection\n   */\n  useEffect(() => {\n    registerEvents({\n      clickStage: () => {\n        setSelected(null);\n        setSearch(\"\");\n      },\n    });\n  }, [registerEvents]);\n\n  /**\n   * When the selected item changes, highlighted the node and center the camera on it.\n   */\n  useEffect(() => {\n    if (!selected) {\n      return;\n    }\n\n    sigma.getGraph().setNodeAttribute(selected, \"highlighted\", true);\n    gotoNode(selected);\n\n    return () => {\n      sigma.getGraph().setNodeAttribute(selected, \"highlighted\", false);\n    };\n  }, [selected]);\n\n  /**\n   * On change event handler for the search input, to set the state.\n   */\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const searchString = e.target.value;\n    const valueItem = values.find((value) => value.label === searchString);\n    if (valueItem) {\n      setSearch(valueItem.label);\n      setValues([]);\n      setSelected(valueItem.id);\n    } else {\n      setSelected(null);\n      setSearch(searchString);\n    }\n  };\n\n  // Common html props for the div\n  const htmlProps = {\n    className: `react-sigma-search ${className ? className : \"\"}`,\n    id,\n    style,\n  };\n\n  return (\n    <div {...htmlProps}>\n      <label htmlFor={inputId} style={{ display: \"none\" }}>\n        Search a node\n      </label>\n      <input\n        id={inputId}\n        type=\"text\"\n        placeholder=\"Search...\"\n        list={`${inputId}-datalist`}\n        value={search}\n        onChange={onInputChange}\n      />\n      <datalist id={`${inputId}-datalist`}>\n        {values.map((value: { id: string; label: string }) => (\n          <option key={value.id} value={value.label}>\n            {value.label}\n          </option>\n        ))}\n      </datalist>\n    </div>\n  );\n};\n","export function getUniqueKey(): string {\n  return Math.random()\n    .toString(36)\n    .slice(2);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}